{{ $env := .Values.werf.env }}
{{ $pythonApi := "python-api" }}
{{ $golangWeb := "golang-web" }}
{{ range $smallName := list $golangWeb $pythonApi }}

{{ $name := printf "%s-%s" $.Chart.Name $smallName }}
{{ $underlineName := replace "-" "_" $smallName }}
{{ $values := index $.Values $underlineName }}
{{ $port := pluck $env $values.port | first | default $values.port._default }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $name }}
  labels:
    app: {{ $name }}
spec:
  ports:
  - name: http
    port: {{ $port }}
  selector:
    app: {{ $name }}
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ $name }}
  labels:
    app: {{ $name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $name }}
  template:
    metadata:
      labels:
        app: {{ $name }}
    spec:
      imagePullSecrets:
      - name: registrysecret
      containers:
      - name: {{ $name }}
        image: {{ index $.Values.werf.image $underlineName }}
        imagePullPolicy: Always
        env:
          {{- if eq $smallName $golangWeb }}
          - name: PYTHON_API_ALN_URL
            {{- $pythonPort := pluck $env $.Values.python_api.port | first | default $.Values.python_api.port._default }}
            {{- $pythonAlnPath := pluck $env $.Values.python_api.alignment_path | first | default $.Values.python_api.alignment_path._default }}
            value: {{ printf "http://%s-%s:%s/%s" $.Chart.Name $pythonApi ( $pythonPort | toString ) $pythonAlnPath }}
          {{- end }}
          - name: PORT
            value: {{ $port | quote }}
        command:
{{- range $comm := pluck $env $values.command | first | default $values.command._default }}
        - {{ $comm }}
{{- end }}
        args:
{{- range $arg := pluck $env $values.args | first | default $values.args._default }}
        - {{ $arg }}
{{- end }}
        ports:
          - containerPort: {{ $port }}
{{- end }}
